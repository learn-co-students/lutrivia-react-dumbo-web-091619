{"ast":null,"code":"var _jsxFileName = \"/code/4_module/code_challenge/mod4_cc_prep/lutrivia-react-dumbo-web-091619/lutrivia/src/Container.js\";\nimport React from 'react';\nimport QuestionList from './QuestionList';\nimport SubmitCard from './SubmitCard.js';\nexport default class Container extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      score: 0\n    };\n\n    this.get_answer = (event, answer) => {\n      const user_answer = event.target.value;\n      const question_answer = answer.toString();\n      const update_score = user_answer === question_answer ? this.state.score += 1 : this.state.score;\n      this.setState({\n        score: update_score\n      });\n    };\n\n    this.new_game = () => {\n      this.setState({\n        score: 0\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state.score);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Lutrivia\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.new_game,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"New Game\"), \"Score: \", this.state.score, React.createElement(QuestionList, {\n      questions: this.props.questions,\n      get_answer: this.get_answer // correct={this.get_answer() }\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(SubmitCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/code/4_module/code_challenge/mod4_cc_prep/lutrivia-react-dumbo-web-091619/lutrivia/src/Container.js"],"names":["React","QuestionList","SubmitCard","Container","Component","state","score","get_answer","event","answer","user_answer","target","value","question_answer","toString","update_score","setState","new_game","render","console","log","props","questions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AAEA,eAAe,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEtDC,KAFsD,GAE9C;AACPC,MAAAA,KAAK,EAAE;AADA,KAF8C;;AAAA,SAMtDC,UANsD,GAMzC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,YAAMC,WAAW,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAjC;AACA,YAAMC,eAAe,GAAGJ,MAAM,CAACK,QAAP,EAAxB;AAEA,YAAMC,YAAY,GAAIL,WAAW,KAAKG,eAAjB,GAAqC,KAAKR,KAAL,CAAWC,KAAX,IAAoB,CAAzD,GAA+D,KAAKD,KAAL,CAAWC,KAA/F;AAEA,WAAKU,QAAL,CAAc;AACbV,QAAAA,KAAK,EAAES;AADM,OAAd;AAGA,KAfqD;;AAAA,SAiBtDE,QAjBsD,GAiB3C,MAAM;AAChB,WAAKD,QAAL,CAAc;AACbV,QAAAA,KAAK,EAAE;AADM,OAAd;AAGA,KArBqD;AAAA;;AAuBtDY,EAAAA,MAAM,GAAE;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWC,KAAvB;AAEA,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC;AAAQ,MAAA,OAAO,EAAG,KAAKW,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHD,aAIU,KAAKZ,KAAL,CAAWC,KAJrB,EAKC,oBAAC,YAAD;AACC,MAAA,SAAS,EAAG,KAAKe,KAAL,CAAWC,SADxB;AAEC,MAAA,UAAU,EAAG,KAAKf,UAFnB,CAGC;AAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALD,EAUC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVD,CADD;AAcA;;AAzCqD","sourcesContent":["import React from 'react'\nimport QuestionList from './QuestionList'\nimport SubmitCard from './SubmitCard.js'\n\nexport default class Container extends React.Component {\n\n\tstate = {\n\t\tscore: 0\n\t}\n\n\tget_answer = (event, answer) => {\n\t\tconst user_answer = event.target.value\n\t\tconst question_answer = answer.toString()\n\n\t\tconst update_score = (user_answer === question_answer) ? (this.state.score += 1) : (this.state.score)\n\n\t\tthis.setState({\n\t\t\tscore: update_score\n\t\t})\n\t}\n\t\n\tnew_game = () => {\n\t\tthis.setState({\n\t\t\tscore: 0\n\t\t})\n\t}\n\n\trender(){\n\n\t\tconsole.log(this.state.score)\n\n\t\treturn(\n\t\t\t<div className=\"container\">\n\t\t\t\tLutrivia\n\t\t\t\t<br />\n\t\t\t\t<button onClick={ this.new_game } >New Game</button>\n\t\t\t\tScore: { this.state.score }\n\t\t\t\t<QuestionList\n\t\t\t\t\tquestions={ this.props.questions }\n\t\t\t\t\tget_answer={ this.get_answer }\n\t\t\t\t\t// correct={this.get_answer() }\n\t\t\t\t/>\n\t\t\t\t<SubmitCard />\n\t\t\t</div>\n\t\t)\n\t}\n\n}"]},"metadata":{},"sourceType":"module"}