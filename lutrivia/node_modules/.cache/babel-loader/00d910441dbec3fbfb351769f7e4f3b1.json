{"ast":null,"code":"var _jsxFileName = \"/code/4_module/code_challenge/mod4_cc_prep/lutrivia-react-dumbo-web-091619/lutrivia/src/QuestionCard.js\";\nimport React from 'react';\nimport TrueFalseButtons from './TrueFalseButtons.js';\nexport default class QuestionCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      question_answered: false\n    };\n\n    this.toggle_answered = () => {\n      this.setState({\n        question_answered: true\n      });\n    };\n  }\n\n  render() {\n    // console.log(this.props)\n    return React.createElement(\"div\", {\n      className: \"question_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, this.props.question.text), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(TrueFalseButtons, {\n      get_answer: this.props.get_answer,\n      answered: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/code/4_module/code_challenge/mod4_cc_prep/lutrivia-react-dumbo-web-091619/lutrivia/src/QuestionCard.js"],"names":["React","TrueFalseButtons","QuestionCard","Component","state","question_answered","toggle_answered","setState","render","props","question","text","get_answer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AAEA,eAAe,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAEzDC,KAFyD,GAEjD;AACPC,MAAAA,iBAAiB,EAAE;AADZ,KAFiD;;AAAA,SAMzDC,eANyD,GAMvC,MAAM;AACvB,WAAKC,QAAL,CAAc;AACbF,QAAAA,iBAAiB,EAAE;AADN,OAAd;AAGA,KAVwD;AAAA;;AAazDG,EAAAA,MAAM,GAAE;AAEP;AAEA,WACC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAA3B,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAKC,oBAAC,gBAAD;AAAkB,MAAA,UAAU,EAAE,KAAKF,KAAL,CAAWG,UAAzC;AAAqD,MAAA,QAAQ,EAAE,KAAKR,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALD,CADD;AAUA;;AA3BwD","sourcesContent":["import React from 'react'\nimport TrueFalseButtons from './TrueFalseButtons.js'\n\nexport default class QuestionCard extends React.Component {\n\n\tstate = {\n\t\tquestion_answered: false\n\t}\n\n\ttoggle_answered = () => {\n\t\tthis.setState({\n\t\t\tquestion_answered: true\n\t\t})\n\t}\n\n\n\trender(){\n\n\t\t// console.log(this.props)\n\n\t\treturn(\n\t\t\t<div className=\"question_card\">\n\t\t\t\t<span>{this.props.question.text}</span>\n\t\t\t\t<br />\n\t{/* <button value=\"true\" onClick={(event) => this.props.get_answer(event, this.props.question.answer), this.toggle_answered }>True</button> \n\t<button value=\"false\" onClick={(event) => this.props.get_answer(event, this.props.question.answer), this.toggle_answered }>False</button> */}\n\t\t\t\t<TrueFalseButtons get_answer={this.props.get_answer} answered={this.state} />\n\t{/* { !(this.state.question_answered) ? <button value=\"true\" onClick={(event) => this.props.get_answer(event, this.props.question.answer), this.toggle_answered }>True</button> <button value=\"false\" onClick={(event) => this.props.get_answer(event, this.props.question.answer), this.toggle_answered }>False</button> : <div></div> } */}\n\t\t\t</div>\n\t\t)\n\t}\n\n}"]},"metadata":{},"sourceType":"module"}